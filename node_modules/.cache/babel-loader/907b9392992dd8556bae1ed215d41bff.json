{"ast":null,"code":"import { singInProcessCheck } from \"./authReducer\";\nconst INITILIZATION_SUCCESFULL = \"init_app\";\nlet initialState = {\n  initialized: false\n};\nexport let appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITILIZATION_SUCCESFULL:\n      {\n        return { ...state,\n          initialized: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst initial_status = () => ({\n  type: INITILIZATION_SUCCESFULL\n});\n\nexport const initialization_App = () => {\n  return dispatch => {\n    let promise = dispatch(singInProcessCheck());\n    Promise.all([promise]).then(() => {\n      dispatch(initial_status());\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/marii/OneDrive/Desktop/JavaScript/react_app/src/redux/appReducer.ts"],"names":["singInProcessCheck","INITILIZATION_SUCCESFULL","initialState","initialized","appReducer","state","action","type","initial_status","initialization_App","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,eAAjC;AAEA,MAAMC,wBAAgC,GAAG,UAAzC;AAKA,IAAIC,YAA8B,GAAG;AACjCC,EAAAA,WAAW,EAAE;AADoB,CAArC;AAIA,OAAO,IAAIC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAyD;AAC7E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGI,KADA;AAEHF,UAAAA,WAAW,EAAE;AAFV,SAAP;AAIH;;AACD;AACI,aAAOE,KAAP;AARR;AAUH,CAXM;;AAeP,MAAMG,cAAc,GAAG,OAAmC;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAnC,CAAvB;;AAEA,OAAO,MAAMQ,kBAAkB,GAAG,MAAM;AAEpC,SAAQC,QAAD,IAAmB;AACtB,QAAIC,OAAO,GAAGD,QAAQ,CAACV,kBAAkB,EAAnB,CAAtB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACJJ,MAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACH,KAHT;AAKH,GAPD;AAQH,CAVM","sourcesContent":["import {singInProcessCheck} from \"./authReducer\";\r\n\r\nconst INITILIZATION_SUCCESFULL: string = \"init_app\";\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport let appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITILIZATION_SUCCESFULL: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype InitializationSuccessType = {\r\n    type: typeof INITILIZATION_SUCCESFULL\r\n}\r\nconst initial_status = () : InitializationSuccessType => ({type: INITILIZATION_SUCCESFULL});\r\n\r\nexport const initialization_App = () => {\r\n\r\n    return (dispatch: any) => {\r\n        let promise = dispatch(singInProcessCheck());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                    dispatch(initial_status());\r\n                }\r\n            );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}