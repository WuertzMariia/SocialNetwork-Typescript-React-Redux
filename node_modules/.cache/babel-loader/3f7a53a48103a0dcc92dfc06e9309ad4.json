{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marii\\\\OneDrive\\\\Desktop\\\\JavaScript\\\\react_app\\\\src\\\\components\\\\Content\\\\Content_Container.tsx\";\nimport React from \"react\";\nimport Content from \"./Content\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, updateUserStatus, getCurrentUserStatus } from \"../../redux/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirectComponent } from \"../Redirect/withAuthRedirectComponent\";\nimport { compose } from \"redux\";\nimport { savePhoto, setProfileData } from \"../../redux/profileReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Content_Container extends React.Component {\n  refreshProfile() {\n    let userIdAuthentic = this.props.match.params.userId;\n\n    if (!userIdAuthentic && this.props.isAuth) {\n      userIdAuthentic = this.props.authorized_userId;\n    }\n\n    this.props.getUserProfile(userIdAuthentic);\n    this.props.getCurrentUserStatus(userIdAuthentic);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.match.params.userId != this.props.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        userIdA: this.props.userIdAuth,\n        savePhotoC: this.props.savePhoto,\n        ...this.props,\n        isOwner: !this.props.match.params.userId,\n        profile: this.props.profile,\n        status: this.props.status,\n        updateUserStatus: this.props.updateUserStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state[\"profilePage\"][\"profile\"],\n  status: state[\"profilePage\"][\"status\"],\n  authorized_userId: state.auth.data.userId,\n  isAuth: state.auth.data.isAuth,\n  userIdAuth: state.auth.data.userId\n}); // @ts-ignore\n\n\nexport default compose(connect(mapStateToProps, {\n  setProfileData,\n  savePhoto,\n  getUserProfile,\n  updateUserStatus,\n  getCurrentUserStatus\n}), withRouter, withAuthRedirectComponent)(Content_Container);","map":{"version":3,"sources":["C:/Users/marii/OneDrive/Desktop/JavaScript/react_app/src/components/Content/Content_Container.tsx"],"names":["React","Content","connect","getUserProfile","updateUserStatus","getCurrentUserStatus","withRouter","withAuthRedirectComponent","compose","savePhoto","setProfileData","Content_Container","Component","refreshProfile","userIdAuthentic","props","match","params","userId","isAuth","authorized_userId","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","userIdAuth","profile","status","mapStateToProps","state","auth","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,oBAA1C,QAA0F,4BAA1F;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,yBAAR,QAAwC,uCAAxC;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,QAAwC,4BAAxC;;;AAqBA,MAAMC,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAA4F;AACxFC,EAAAA,cAAc,GAAG;AACb,QAAIC,eAAe,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAA9C;;AACA,QAAI,CAACJ,eAAD,IAAoB,KAAKC,KAAL,CAAWI,MAAnC,EAA2C;AACvCL,MAAAA,eAAe,GAAG,KAAKC,KAAL,CAAWK,iBAA7B;AACH;;AACD,SAAKL,KAAL,CAAWZ,cAAX,CAA0BW,eAA1B;AACA,SAAKC,KAAL,CAAWV,oBAAX,CAAgCS,eAAhC;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,cAAL;AACH;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAgBC,SAAhB,EAA+BC,QAA/B,EAA6C;AAC3D,QAAIF,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBC,MAAvB,IAAiC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAA7D,EAAqE;AACjE,WAAKL,cAAL;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAA,6BACJ,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,UAA7B;AAAyC,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWN,SAAhE;AAAA,WAA8E,KAAKM,KAAnF;AACS,QAAA,OAAO,EAAE,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAD3C;AACmD,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWa,OADvE;AACgF,QAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,MADnG;AAES,QAAA,gBAAgB,EAAE,KAAKd,KAAL,CAAWX;AAFtC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAAR;AAKH;;AA1BuF;;AA6B5F,IAAI0B,eAAe,GAAIC,KAAD,KAA0B;AAC5CH,EAAAA,OAAO,EAAEG,KAAK,CAAC,aAAD,CAAL,CAAqB,SAArB,CADmC;AAE5CF,EAAAA,MAAM,EAAEE,KAAK,CAAC,aAAD,CAAL,CAAqB,QAArB,CAFoC;AAG5CX,EAAAA,iBAAiB,EAAEW,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBf,MAHS;AAI5CC,EAAAA,MAAM,EAAEY,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBd,MAJoB;AAK5CQ,EAAAA,UAAU,EAAEI,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBf;AALgB,CAA1B,CAAtB,C,CAQA;;;AACA,eAAeV,OAAO,CAACN,OAAO,CAAC4B,eAAD,EAAkB;AACxCpB,EAAAA,cADwC;AAExCD,EAAAA,SAFwC;AAGxCN,EAAAA,cAHwC;AAIxCC,EAAAA,gBAJwC;AAKxCC,EAAAA;AALwC,CAAlB,CAAR,EAOlBC,UAPkB,EAQlBC,yBARkB,CAAP,CASdI,iBATc,CAAf","sourcesContent":["import React from \"react\";\r\nimport Content from \"./Content\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, updateUserStatus, getCurrentUserStatus, UsersType, PostType} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirectComponent} from \"../Redirect/withAuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\nimport {savePhoto, setProfileData} from \"../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: UsersType | null,\r\n    status: string | null,\r\n    authorized_userId: number,\r\n    isAuth: boolean,\r\n    userIdAuth: number\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    setProfileData: () => void,\r\n    savePhoto: () => void,\r\n    getUserProfile: (userId: number) => void,\r\n    updateUserStatus: () => void,\r\n    getCurrentUserStatus: (userId: number) => void,\r\n    match: any,\r\n    params: any,\r\n\r\n}\r\nclass Content_Container extends React.Component<MapDispatchToPropsType&MapStateToPropsType> {\r\n    refreshProfile() {\r\n        let userIdAuthentic = this.props.match.params.userId;\r\n        if (!userIdAuthentic && this.props.isAuth) {\r\n            userIdAuthentic = this.props.authorized_userId;\r\n        }\r\n        this.props.getUserProfile(userIdAuthentic);\r\n        this.props.getCurrentUserStatus(userIdAuthentic);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps:any, prevState:any, snapshot:any) {\r\n        if (prevProps.match.params.userId != this.props.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Content userIdA={this.props.userIdAuth} savePhotoC={this.props.savePhoto}{...this.props}\r\n                     isOwner={!this.props.match.params.userId} profile={this.props.profile} status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    profile: state[\"profilePage\"][\"profile\"],\r\n    status: state[\"profilePage\"][\"status\"],\r\n    authorized_userId: state.auth.data.userId,\r\n    isAuth: state.auth.data.isAuth,\r\n    userIdAuth: state.auth.data.userId\r\n});\r\n\r\n// @ts-ignore\r\nexport default compose(connect(mapStateToProps, {\r\n        setProfileData,\r\n        savePhoto,\r\n        getUserProfile,\r\n        updateUserStatus,\r\n        getCurrentUserStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirectComponent)\r\n(Content_Container)\r\n"]},"metadata":{},"sourceType":"module"}