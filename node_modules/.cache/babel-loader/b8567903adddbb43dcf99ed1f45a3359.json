{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marii\\\\OneDrive\\\\Desktop\\\\JavaScript\\\\react_app\\\\src\\\\components\\\\Login\\\\Login.tsx\";\nimport React from 'react';\nimport c from './Login.module.css';\nimport { Form, Field } from 'react-final-form';\nimport { singInLogin } from '../../redux/authReducer';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: value => {\n      props.onSubmitForm(value);\n    },\n    validate: values => {\n      const errors = {}; // @ts-ignore\n\n      if (!values.login) {\n        // @ts-ignore\n        errors.login = \"Required\";\n      }\n\n      if (!values.password) {\n        // @ts-ignore\n        errors.password = \"Required\";\n      }\n\n      return errors;\n    },\n    render: ({\n      handleSubmit,\n      form,\n      submitting,\n      pristine,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: c.transparent,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.form_inner,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), props.login_failed ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: c.failed_sing_in,\n          children: \"Sign in failed. Wrong E-Mail or password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n          name: \"login\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n              type: \"text\",\n              placeholder: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"remember_me\",\n            component: \"input\",\n            type: \"checkbox\",\n            value: true,\n            id: \"custom_checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), ' ', \"remember me\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), !!props.captchaUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: c.captcha,\n          src: props.captchaUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 48\n        }, this), !!props.captchaUrl && /*#__PURE__*/_jsxDEV(Field, {\n          name: \"captcha\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Please enter the captcha code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"submit\",\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = LoginForm;\n\nconst Login = props => {\n  debugger;\n\n  let onSubmitForm = values => {\n    props.singInLogin(values);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      from: \"/login\",\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      captchaUrl: props.captchaURL,\n      onSubmitForm: onSubmitForm,\n      login_failed: props.login_failed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Login;\n\nlet mapStateToProps = state => ({\n  isAuth: state.auth.data.isAuth,\n  login_failed: state.auth.data.login_failed,\n  captchaURL: state.auth.data.captchaURL\n});\n\nexport default connect(mapStateToProps, {\n  singInLogin\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["C:/Users/marii/OneDrive/Desktop/JavaScript/react_app/src/components/Login/Login.tsx"],"names":["React","c","Form","Field","singInLogin","connect","Redirect","LoginForm","props","value","onSubmitForm","values","errors","login","password","handleSubmit","form","submitting","pristine","transparent","form_inner","login_failed","failed_sing_in","input","meta","error","touched","captchaUrl","captcha","Login","isAuth","captchaURL","mapStateToProps","state","auth","data"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport c from './Login.module.css';\r\nimport {Form, Field} from 'react-final-form';\r\nimport {singInLogin, ValuesType} from '../../redux/authReducer';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\n\r\ntype PropsLoginFormType = {\r\n    captchaUrl: string|null,\r\n    onSubmitForm: (value: ValuesType)=> void,\r\n    login_failed: boolean | null\r\n}\r\nexport const LoginForm: React.FC<PropsLoginFormType> = (props) => {\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={(value: ValuesType) => {\r\n                props.onSubmitForm(value);\r\n            }}\r\n\r\n            validate={values => {\r\n                const errors = {}\r\n                // @ts-ignore\r\n                if (!values.login) {\r\n                    // @ts-ignore\r\n                    errors.login = \"Required\"\r\n                }\r\n                if (!values.password) {\r\n                    // @ts-ignore\r\n                    errors.password = \"Required\"\r\n                }\r\n                return errors;\r\n            }}\r\n            render={({handleSubmit, form, submitting, pristine, values}) => (\r\n                <form onSubmit={handleSubmit} className={c.transparent}>\r\n                    <div className={c.form_inner}>\r\n                        {/* //  + ' ' + (meta.error && meta.touched ? c.error_style: \" \") */}\r\n\r\n                        <h3>Sign In</h3>\r\n                        {props.login_failed ?\r\n                            <p className={c.failed_sing_in}>Sign in failed. Wrong E-Mail or password</p> : null}\r\n                        <Field name=\"login\">\r\n                            {({input, meta}) => (\r\n                                <div>\r\n                                    <label>Login</label>\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                    <input {...input} type=\"text\" placeholder=\"Login\"/>\r\n\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"password\">\r\n                            {({input, meta}) => (\r\n                                <div>\r\n                                    <label>Password</label>\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                    <input {...input} type=\"password\" placeholder=\"Password\"/>\r\n\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <label>\r\n                            <Field\r\n                                name=\"remember_me\"\r\n                                component=\"input\"\r\n                                type=\"checkbox\"\r\n                                value={true}\r\n                                id={\"custom_checkbox\"}\r\n                            />{' '}\r\n                            remember me\r\n                        </label>\r\n                        {!!props.captchaUrl && <img className={c.captcha} src={props.captchaUrl}/>}\r\n                        {!!props.captchaUrl &&\r\n                        <Field name=\"captcha\">\r\n                            {({input, meta}) => (\r\n                                <div>\r\n                                    <label>Please enter the captcha code</label>\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                    <input {...input} type=\"text\" placeholder=\"\"/>\r\n\r\n                                </div>\r\n                            )}\r\n                        </Field>}\r\n\r\n                        <input name={\"submit\"} type={\"submit\"} value={\"submit\"}/>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    isAuth: boolean,\r\n    login_failed: boolean| null,\r\n    captchaURL: string | null,\r\n    singInLogin: (values: any) => void\r\n}\r\n\r\nconst Login: React.FC<PropsType> = (props) => {\r\n    debugger;\r\n    let onSubmitForm = (values: any) => {\r\n        props.singInLogin(values);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect from=\"/login\" to=\"/profile\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            <LoginForm captchaUrl={props.captchaURL} onSubmitForm={onSubmitForm} login_failed={props.login_failed}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType) => ({\r\n    isAuth: state.auth.data.isAuth,\r\n    login_failed: state.auth.data.login_failed,\r\n    captchaURL: state.auth.data.captchaURL\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {singInLogin})(Login);"]},"metadata":{},"sourceType":"module"}