{"ast":null,"code":"import { singInProcessCheck } from \"./authReducer\";\nconst INITILIZATION_SUCCESFULL = \"init_app\";\nlet initialState = {\n  initialized: false\n};\nexport let appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITILIZATION_SUCCESFULL:\n      {\n        return { ...state,\n          initialized: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst initial_status = () => ({\n  type: INITILIZATION_SUCCESFULL\n});\n\nexport const initialization_App = () => {\n  return async dispatch => {\n    let response = await dispatch(singInProcessCheck());\n    dispatch(initial_status());\n  };\n};","map":{"version":3,"sources":["C:/Users/marii/OneDrive/Desktop/JavaScript/react_app/src/redux/appReducer.ts"],"names":["singInProcessCheck","INITILIZATION_SUCCESFULL","initialState","initialized","appReducer","state","action","type","initial_status","initialization_App","dispatch","response"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,eAAjC;AAIA,MAAMC,wBAAgC,GAAG,UAAzC;AAKA,IAAIC,YAA8B,GAAG;AACjCC,EAAAA,WAAW,EAAE;AADoB,CAArC;AAIA,OAAO,IAAIC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAA+E;AACnG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGI,KADA;AAEHF,UAAAA,WAAW,EAAE;AAFV,SAAP;AAIH;;AACD;AACI,aAAOE,KAAP;AARR;AAUH,CAXM;;AAeP,MAAMG,cAAc,GAAG,OAAmC;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAnC,CAAvB;;AAEA,OAAO,MAAMQ,kBAAkB,GAAG,MAAgB;AAE9C,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAIC,QAAQ,GAAG,MAAMD,QAAQ,CAACV,kBAAkB,EAAnB,CAA7B;AACFU,IAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AAEL,GAJG;AAIF,CANK","sourcesContent":["import {singInProcessCheck} from \"./authReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux_store\";\r\n\r\nconst INITILIZATION_SUCCESFULL: string = \"init_app\";\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport let appReducer = (state = initialState, action: InitializationSuccessType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITILIZATION_SUCCESFULL: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype InitializationSuccessType = {\r\n    type: typeof INITILIZATION_SUCCESFULL\r\n}\r\nconst initial_status = () : InitializationSuccessType => ({type: INITILIZATION_SUCCESFULL});\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, any, InitializationSuccessType>\r\nexport const initialization_App = ():ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        let response = await dispatch(singInProcessCheck());\r\n      dispatch(initial_status());\r\n\r\n}}"]},"metadata":{},"sourceType":"module"}