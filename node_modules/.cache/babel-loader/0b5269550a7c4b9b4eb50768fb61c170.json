{"ast":null,"code":"import { usersApi, profileAPI } from \"../api/api\";\nimport React from \"react\";\nconst post_textarea_changed = \"post_textarea_changed\";\nconst add_post = \"add_post\";\nconst SET_USER_PROFILE = \"setUserProfile\";\nconst TOGGLE_LOADING = \"page_is_loading\";\nconst UPDATE_USER_STATUS = \"user_status_update\";\nconst SET_USER_STATUS = \"set_user_status\";\nconst DELETE_POST = \"delete_post\";\nconst SET_PROFILE_PHOTO = \"set_new_profile_photo\";\nconst SET_PROFILE_DATA = \"set_full_profile_data\";\nlet initialState = {\n  posts: [{\n    post: \"Hello\",\n    id: 1\n  }, {\n    post: \"how are you\",\n    id: 2\n  }, {\n    post: \"i am fine\",\n    id: 3\n  }, {\n    post: \"i am fine\",\n    id: 4\n  }, {\n    post: \"i am fine\",\n    id: 5\n  }],\n  profile: null,\n  isFetching: false,\n  status: 'My dream is to become a good Frontend Developer'\n};\n\nlet profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case add_post:\n      {\n        return { ...state,\n          posts: [...state.posts, {\n            post: action.new_post,\n            id: 6\n          }]\n        };\n      }\n      ;\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: [...state.posts.filter(item => {\n            return item.id != action.id;\n          })]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n      ;\n\n    case SET_PROFILE_PHOTO:\n      {\n        debugger;\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.file\n          }\n        };\n      }\n\n    case TOGGLE_LOADING:\n      {\n        return { ...state,\n          isFetching: action.isLoading\n        };\n      }\n      ;\n\n    case UPDATE_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n      ;\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const actioncreatorAddPost = new_post => ({\n  type: add_post,\n  new_post\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const toggleIsLoading = isLoading => ({\n  type: TOGGLE_LOADING,\n  isLoading\n});\nexport const deletePost = id => ({\n  type: DELETE_POST,\n  id\n});\n\nconst updatingUserStatus = status => ({\n  type: UPDATE_USER_STATUS,\n  status\n});\n\nconst setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\n\nconst savePhotoSuccess = file => ({\n  type: SET_PROFILE_PHOTO,\n  file\n});\n\nconst setProfileDataSuccess = data => ({\n  type: SET_PROFILE_DATA,\n  data\n});\n\nexport const getCurrentUserStatus = userId => {\n  return async dispatch => {\n    const response = await profileAPI.getUserStatus(userId);\n    dispatch(setUserStatus(response));\n  };\n};\nexport const getUserProfile = userId => {\n  return async dispatch => {\n    dispatch(toggleIsLoading(true));\n    const response = await usersApi.getUserProfile(userId);\n    debugger;\n    dispatch(toggleIsLoading(false));\n    dispatch(setUserProfile(response));\n  };\n};\nexport const updateUserStatus = status => {\n  return async dispatch => {\n    try {\n      const response = await profileAPI.updateUserStatus(status);\n\n      if (response.resultCode === 0) {\n        dispatch(updatingUserStatus(status));\n      }\n    } catch (error) {\n      alert(\"error\");\n    }\n  };\n};\nexport const addNewPost = values => {\n  return dispatch => {\n    dispatch(actioncreatorAddPost(values));\n  };\n};\nexport const savePhoto = file => {\n  return async dispatch => {\n    const response = await profileAPI.savePhoto(file);\n\n    if (response.data.resultCode === 0) {\n      dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n  };\n};\nexport const setProfileData = values => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.data.userId;\n    const response = await profileAPI.setProfData(values);\n    debugger;\n\n    if (response.data.resultCode === 0) {\n      dispatch(getUserProfile(userId));\n    }\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/marii/OneDrive/Desktop/JavaScript/react_app/src/redux/profileReducer.js"],"names":["usersApi","profileAPI","React","post_textarea_changed","add_post","SET_USER_PROFILE","TOGGLE_LOADING","UPDATE_USER_STATUS","SET_USER_STATUS","DELETE_POST","SET_PROFILE_PHOTO","SET_PROFILE_DATA","initialState","posts","post","id","profile","isFetching","status","profileReducer","state","action","type","new_post","filter","item","photos","file","isLoading","actioncreatorAddPost","setUserProfile","toggleIsLoading","deletePost","updatingUserStatus","setUserStatus","savePhotoSuccess","setProfileDataSuccess","data","getCurrentUserStatus","userId","dispatch","response","getUserStatus","getUserProfile","updateUserStatus","resultCode","error","alert","addNewPost","values","savePhoto","setProfileData","getState","auth","setProfData"],"mappings":"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","sourcesContent":["import {usersApi, profileAPI} from \"../api/api\";\r\nimport React from \"react\";\r\n\r\nconst post_textarea_changed = \"post_textarea_changed\";\r\nconst add_post = \"add_post\";\r\nconst SET_USER_PROFILE = \"setUserProfile\";\r\nconst TOGGLE_LOADING = \"page_is_loading\";\r\nconst UPDATE_USER_STATUS = \"user_status_update\";\r\nconst SET_USER_STATUS = \"set_user_status\"\r\nconst DELETE_POST = \"delete_post\";\r\nconst SET_PROFILE_PHOTO = \"set_new_profile_photo\";\r\nconst SET_PROFILE_DATA = \"set_full_profile_data\";\r\nlet initialState = {\r\n\r\n    posts: [\r\n        {post: \"Hello\", id: 1},\r\n        {post: \"how are you\", id: 2},\r\n        {post: \"i am fine\", id: 3},\r\n        {post: \"i am fine\", id: 4},\r\n        {post: \"i am fine\", id: 5}\r\n    ],\r\n    profile: null,\r\n    isFetching: false,\r\n    status: 'My dream is to become a good Frontend Developer'\r\n}\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case add_post : {\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {post: action.new_post, id: 6}]\r\n            }\r\n        }\r\n            ;\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter(item => {\r\n                    return item.id != action.id\r\n                })]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE : {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n            ;\r\n        case SET_PROFILE_PHOTO: {\r\n            debugger;\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.file}\r\n\r\n            }\r\n        }\r\n        case TOGGLE_LOADING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isLoading,\r\n            }\r\n        }\r\n            ;\r\n        case UPDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n            ;\r\n        case SET_USER_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actioncreatorAddPost = (new_post) => ({type: add_post, new_post});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_LOADING, isLoading});\r\nexport const deletePost = (id) => ({type: DELETE_POST, id});\r\nconst updatingUserStatus = (status) => ({type: UPDATE_USER_STATUS, status});\r\nconst setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nconst savePhotoSuccess = (file) => ({type: SET_PROFILE_PHOTO, file})\r\nconst setProfileDataSuccess = (data) => ({type: SET_PROFILE_DATA, data});\r\nexport const getCurrentUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        const response = await profileAPI.getUserStatus(userId);\r\n        dispatch(setUserStatus(response));\r\n\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n        const response = await usersApi.getUserProfile(userId)\r\ndebugger;\r\n        dispatch(toggleIsLoading(false));\r\n        dispatch(setUserProfile(response));\r\n\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await profileAPI.updateUserStatus(status)\r\n            if (response.resultCode === 0) {\r\n                dispatch(updatingUserStatus(status));\r\n            }\r\n        }\r\n        catch (error) {\r\n\r\n            alert (\"error\"); \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addNewPost = (values) => {\r\n    return (dispatch) => {\r\n        dispatch(actioncreatorAddPost(values));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => {\r\n    return async (dispatch) => {\r\n        const response = await profileAPI.savePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setProfileData = (values) => {\r\n    return async (dispatch, getState) => {\r\n        const userId = getState().auth.data.userId;\r\n        const response = await profileAPI.setProfData(values);\r\n        debugger;\r\n        if (response.data.resultCode === 0) {\r\n\r\n            dispatch(getUserProfile(userId));\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer; "]},"metadata":{},"sourceType":"module"}